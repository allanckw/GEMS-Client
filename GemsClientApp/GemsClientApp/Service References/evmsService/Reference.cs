//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GEMS.UIWPF.evmsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/evmsService.entities")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GEMS.UIWPF.evmsService.Faculty UserFacultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isEventOrganizerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isFacilityAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isNormalUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isSystemAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GEMS.UIWPF.evmsService.Faculty UserFaculty {
            get {
                return this.UserFacultyField;
            }
            set {
                if ((this.UserFacultyField.Equals(value) != true)) {
                    this.UserFacultyField = value;
                    this.RaisePropertyChanged("UserFaculty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isEventOrganizer {
            get {
                return this.isEventOrganizerField;
            }
            set {
                if ((this.isEventOrganizerField.Equals(value) != true)) {
                    this.isEventOrganizerField = value;
                    this.RaisePropertyChanged("isEventOrganizer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isFacilityAdmin {
            get {
                return this.isFacilityAdminField;
            }
            set {
                if ((this.isFacilityAdminField.Equals(value) != true)) {
                    this.isFacilityAdminField = value;
                    this.RaisePropertyChanged("isFacilityAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isNormalUser {
            get {
                return this.isNormalUserField;
            }
            set {
                if ((this.isNormalUserField.Equals(value) != true)) {
                    this.isNormalUserField = value;
                    this.RaisePropertyChanged("isNormalUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isSystemAdmin {
            get {
                return this.isSystemAdminField;
            }
            set {
                if ((this.isSystemAdminField.Equals(value) != true)) {
                    this.isSystemAdminField = value;
                    this.RaisePropertyChanged("isSystemAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userID {
            get {
                return this.userIDField;
            }
            set {
                if ((object.ReferenceEquals(this.userIDField, value) != true)) {
                    this.userIDField = value;
                    this.RaisePropertyChanged("userID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Faculty", Namespace="http://schemas.datacontract.org/2004/07/evmsService.entities")]
    public enum Faculty : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Faculty_of_Science = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Faculty_of_Engineering = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Faculty_of_Arts_and_Social_Science = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Faculty_of_Dentistry = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Faculty_of_Law = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        School_of_Computing = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yong_Loo_Lin_School_of_Medicine = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Yong_Siew_Toh_Conservatory_Of_Music = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        School_of_Design_and_Environment = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        School_of_Business = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Centre_for_Development_of_Teaching_and_Learning = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Centre_for_Instructional_Technology = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Computing_Commons = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EduSports = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Khoo_Teck_Puat_Advanced_Surgery_Training_Centre = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lee_Kuan_Yew_School_of_Public_Policy = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PC_Cluster = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Science_Cluster = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UTown = 18,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
    [System.SerializableAttribute()]
    public partial class SException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Guest", Namespace="http://schemas.datacontract.org/2004/07/evmsService.entities")]
    [System.SerializableAttribute()]
    public partial class Guest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GuestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GuestId {
            get {
                return this.GuestIdField;
            }
            set {
                if ((this.GuestIdField.Equals(value) != true)) {
                    this.GuestIdField = value;
                    this.RaisePropertyChanged("GuestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Facility", Namespace="http://schemas.datacontract.org/2004/07/evmsService.entities")]
    [System.SerializableAttribute()]
    public partial class Facility : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookingContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FacilityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GEMS.UIWPF.evmsService.Faculty FacultyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TechContactField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookingContact {
            get {
                return this.BookingContactField;
            }
            set {
                if ((object.ReferenceEquals(this.BookingContactField, value) != true)) {
                    this.BookingContactField = value;
                    this.RaisePropertyChanged("BookingContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacilityID {
            get {
                return this.FacilityIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FacilityIDField, value) != true)) {
                    this.FacilityIDField = value;
                    this.RaisePropertyChanged("FacilityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GEMS.UIWPF.evmsService.Faculty Faculty {
            get {
                return this.FacultyField;
            }
            set {
                if ((this.FacultyField.Equals(value) != true)) {
                    this.FacultyField = value;
                    this.RaisePropertyChanged("Faculty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TechContact {
            get {
                return this.TechContactField;
            }
            set {
                if ((object.ReferenceEquals(this.TechContactField, value) != true)) {
                    this.TechContactField = value;
                    this.RaisePropertyChanged("TechContact");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnumRoles", Namespace="http://schemas.datacontract.org/2004/07/evmsService.entities")]
    public enum EnumRoles : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        System_Admin = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Facility_Admin = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Event_Organizer = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nil = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Notifications", Namespace="http://schemas.datacontract.org/2004/07/evmsService.entities")]
    [System.SerializableAttribute()]
    public partial class Notifications : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SendDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isReadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Receiver {
            get {
                return this.ReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverField, value) != true)) {
                    this.ReceiverField = value;
                    this.RaisePropertyChanged("Receiver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendDateTime {
            get {
                return this.SendDateTimeField;
            }
            set {
                if ((this.SendDateTimeField.Equals(value) != true)) {
                    this.SendDateTimeField = value;
                    this.RaisePropertyChanged("SendDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isRead {
            get {
                return this.isReadField;
            }
            set {
                if ((this.isReadField.Equals(value) != true)) {
                    this.isReadField = value;
                    this.RaisePropertyChanged("isRead");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/evmsService.entities")]
    [System.SerializableAttribute()]
    public partial class Event : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GEMS.UIWPF.evmsService.User OrganizerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizeridField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebsiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDateTime {
            get {
                return this.EndDateTimeField;
            }
            set {
                if ((this.EndDateTimeField.Equals(value) != true)) {
                    this.EndDateTimeField = value;
                    this.RaisePropertyChanged("EndDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GEMS.UIWPF.evmsService.User Organizer {
            get {
                return this.OrganizerField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizerField, value) != true)) {
                    this.OrganizerField = value;
                    this.RaisePropertyChanged("Organizer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Organizerid {
            get {
                return this.OrganizeridField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizeridField, value) != true)) {
                    this.OrganizeridField = value;
                    this.RaisePropertyChanged("Organizerid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDateTime {
            get {
                return this.StartDateTimeField;
            }
            set {
                if ((this.StartDateTimeField.Equals(value) != true)) {
                    this.StartDateTimeField = value;
                    this.RaisePropertyChanged("StartDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website {
            get {
                return this.WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteField, value) != true)) {
                    this.WebsiteField = value;
                    this.RaisePropertyChanged("Website");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Program", Namespace="http://schemas.datacontract.org/2004/07/evmsService.entities")]
    [System.SerializableAttribute()]
    public partial class Program : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgramIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDateTime {
            get {
                return this.EndDateTimeField;
            }
            set {
                if ((this.EndDateTimeField.Equals(value) != true)) {
                    this.EndDateTimeField = value;
                    this.RaisePropertyChanged("EndDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgramID {
            get {
                return this.ProgramIDField;
            }
            set {
                if ((this.ProgramIDField.Equals(value) != true)) {
                    this.ProgramIDField = value;
                    this.RaisePropertyChanged("ProgramID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDateTime {
            get {
                return this.StartDateTimeField;
            }
            set {
                if ((this.StartDateTimeField.Equals(value) != true)) {
                    this.StartDateTimeField = value;
                    this.RaisePropertyChanged("StartDateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="evmsService.IEvmsService")]
    public interface IEvmsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/AddRole", ReplyAction="http://tempuri.org/IEvmsService/AddRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/AddRoleSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        int AddRole(GEMS.UIWPF.evmsService.User u, string RoleUserID, int EventID, string RolePost, string RoleDescription, int[] functionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/DeleteRole", ReplyAction="http://tempuri.org/IEvmsService/DeleteRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/DeleteRoleSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        void DeleteRole(GEMS.UIWPF.evmsService.User u, int RoleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/AddGuest", ReplyAction="http://tempuri.org/IEvmsService/AddGuestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/AddGuestSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        int AddGuest(GEMS.UIWPF.evmsService.User u, int EventID, string GuestName, string GuestContact, string GuestDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/ViewGuest", ReplyAction="http://tempuri.org/IEvmsService/ViewGuestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/ViewGuestSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        GEMS.UIWPF.evmsService.Guest[] ViewGuest(GEMS.UIWPF.evmsService.User u, int EventID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/EditGuest", ReplyAction="http://tempuri.org/IEvmsService/EditGuestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/EditGuestSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        void EditGuest(GEMS.UIWPF.evmsService.User u, int GuestID, string GuestName, string GuestDescription, string GuestContact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/DeleteGuest", ReplyAction="http://tempuri.org/IEvmsService/DeleteGuestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/DeleteGuestSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        void DeleteGuest(GEMS.UIWPF.evmsService.User u, int GuestID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/removeFacility", ReplyAction="http://tempuri.org/IEvmsService/removeFacilityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/removeFacilitySExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        void removeFacility(GEMS.UIWPF.evmsService.User u, string venue, GEMS.UIWPF.evmsService.Faculty fac);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/updateFacility", ReplyAction="http://tempuri.org/IEvmsService/updateFacilityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/updateFacilitySExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        void updateFacility(GEMS.UIWPF.evmsService.User u, string venue, GEMS.UIWPF.evmsService.Faculty fac, string loc, string bookingCon, string techCon, int cap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/getFacilityAdmin", ReplyAction="http://tempuri.org/IEvmsService/getFacilityAdminResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/getFacilityAdminSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        GEMS.UIWPF.evmsService.Faculty getFacilityAdmin(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/getFacilityAdminFaculty", ReplyAction="http://tempuri.org/IEvmsService/getFacilityAdminFacultyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/getFacilityAdminFacultySExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        string getFacilityAdminFaculty(GEMS.UIWPF.evmsService.Faculty userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/getFacilityAdmins", ReplyAction="http://tempuri.org/IEvmsService/getFacilityAdminsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/getFacilityAdminsSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        GEMS.UIWPF.evmsService.User[] getFacilityAdmins();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/getVenuesByFaculty", ReplyAction="http://tempuri.org/IEvmsService/getVenuesByFacultyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/getVenuesByFacultySExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        GEMS.UIWPF.evmsService.Facility[] getVenuesByFaculty(GEMS.UIWPF.evmsService.Faculty f, int minCap, int maxCap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/getVenues", ReplyAction="http://tempuri.org/IEvmsService/getVenuesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/getVenuesSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        GEMS.UIWPF.evmsService.Facility[] getVenues(int minCap, int maxCap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/getVenuesByCap", ReplyAction="http://tempuri.org/IEvmsService/getVenuesByCapResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/getVenuesByCapSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        GEMS.UIWPF.evmsService.Facility[] getVenuesByCap(GEMS.UIWPF.evmsService.Faculty fac, string faciID, int minCap, int maxCap);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/login", ReplyAction="http://tempuri.org/IEvmsService/loginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/loginSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        GEMS.UIWPF.evmsService.User login(string userid, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/assignLocationAdmin", ReplyAction="http://tempuri.org/IEvmsService/assignLocationAdminResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/assignLocationAdminSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        void assignLocationAdmin(GEMS.UIWPF.evmsService.User assigner, string userid, GEMS.UIWPF.evmsService.Faculty fac);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/assignEventOrganizer", ReplyAction="http://tempuri.org/IEvmsService/assignEventOrganizerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/assignEventOrganizerSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        void assignEventOrganizer(GEMS.UIWPF.evmsService.User assigner, string userid, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/assignSystemAdmin", ReplyAction="http://tempuri.org/IEvmsService/assignSystemAdminResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/assignSystemAdminSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        void assignSystemAdmin(GEMS.UIWPF.evmsService.User assigner, string userid, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/searchUser", ReplyAction="http://tempuri.org/IEvmsService/searchUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/searchUserSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        GEMS.UIWPF.evmsService.User[] searchUser(string name, string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/searchUserByRole", ReplyAction="http://tempuri.org/IEvmsService/searchUserByRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/searchUserByRoleSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        GEMS.UIWPF.evmsService.User[] searchUserByRole(string name, string userid, GEMS.UIWPF.evmsService.EnumRoles r);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/viewUserRole", ReplyAction="http://tempuri.org/IEvmsService/viewUserRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/viewUserRoleSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        GEMS.UIWPF.evmsService.EnumRoles viewUserRole(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/unAssignRole", ReplyAction="http://tempuri.org/IEvmsService/unAssignRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/unAssignRoleSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        void unAssignRole(GEMS.UIWPF.evmsService.User assigner, string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/getNewMessage", ReplyAction="http://tempuri.org/IEvmsService/getNewMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/getNewMessageSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        string getNewMessage(string rid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/getUnreadMessageCount", ReplyAction="http://tempuri.org/IEvmsService/getUnreadMessageCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/getUnreadMessageCountSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        int getUnreadMessageCount(string rid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/getUnreadMessages", ReplyAction="http://tempuri.org/IEvmsService/getUnreadMessagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/getUnreadMessagesSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        GEMS.UIWPF.evmsService.Notifications[] getUnreadMessages(string rid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/getAllMessages", ReplyAction="http://tempuri.org/IEvmsService/getAllMessagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/getAllMessagesSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        GEMS.UIWPF.evmsService.Notifications[] getAllMessages(string rid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/deleteNotifications", ReplyAction="http://tempuri.org/IEvmsService/deleteNotificationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/deleteNotificationsSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        void deleteNotifications(GEMS.UIWPF.evmsService.Notifications n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/deleteAllNotificationsOfUser", ReplyAction="http://tempuri.org/IEvmsService/deleteAllNotificationsOfUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/deleteAllNotificationsOfUserSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        void deleteAllNotificationsOfUser(string uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/setNotificationRead", ReplyAction="http://tempuri.org/IEvmsService/setNotificationReadResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/setNotificationReadSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        void setNotificationRead(GEMS.UIWPF.evmsService.Notifications n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/sendNotification", ReplyAction="http://tempuri.org/IEvmsService/sendNotificationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/sendNotificationSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        void sendNotification(string sender, string receiver, string title, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/CreateEvent", ReplyAction="http://tempuri.org/IEvmsService/CreateEventResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/CreateEventSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        int CreateEvent(GEMS.UIWPF.evmsService.User u, string EventName, System.DateTime EventStartDateTime, System.DateTime EventEndDatetime, string EventDescription, string EventWebsite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/ViewEvent", ReplyAction="http://tempuri.org/IEvmsService/ViewEventResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/ViewEventSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        GEMS.UIWPF.evmsService.Event[] ViewEvent(GEMS.UIWPF.evmsService.User u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/EditEvent", ReplyAction="http://tempuri.org/IEvmsService/EditEventResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/EditEventSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        void EditEvent(GEMS.UIWPF.evmsService.User u, GEMS.UIWPF.evmsService.Event e, string EventOrganizerID, string EventName, System.DateTime EventStartDateTime, System.DateTime EventEndDatetime, string EventDescription, string EventWebsite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/DeleteEvent", ReplyAction="http://tempuri.org/IEvmsService/DeleteEventResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/DeleteEventSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        void DeleteEvent(GEMS.UIWPF.evmsService.User u, GEMS.UIWPF.evmsService.Event e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/viewEventsbyDate", ReplyAction="http://tempuri.org/IEvmsService/viewEventsbyDateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/viewEventsbyDateSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        GEMS.UIWPF.evmsService.Event[] viewEventsbyDate(GEMS.UIWPF.evmsService.User u, System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/AddProgram", ReplyAction="http://tempuri.org/IEvmsService/AddProgramResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/AddProgramSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        int AddProgram(GEMS.UIWPF.evmsService.User u, string ProgramName, System.DateTime ProgramStartDateTime, System.DateTime ProgramEndDatetime, string ProgramDescription, int ProgramEventID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/ViewProgram", ReplyAction="http://tempuri.org/IEvmsService/ViewProgramResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/ViewProgramSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        GEMS.UIWPF.evmsService.Program[] ViewProgram(GEMS.UIWPF.evmsService.User u, int EventID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/EditProgram", ReplyAction="http://tempuri.org/IEvmsService/EditProgramResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/EditProgramSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        void EditProgram(GEMS.UIWPF.evmsService.User u, int ProgramID, string ProgramName, System.DateTime ProgramStartDateTime, System.DateTime ProgramEndDatetime, string ProgramDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEvmsService/DeleteProgram", ReplyAction="http://tempuri.org/IEvmsService/DeleteProgramResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(GEMS.UIWPF.evmsService.SException), Action="http://tempuri.org/IEvmsService/DeleteProgramSExceptionFault", Name="SException", Namespace="http://schemas.datacontract.org/2004/07/evmsService.Controllers")]
        void DeleteProgram(GEMS.UIWPF.evmsService.User u, int ProgramID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEvmsServiceChannel : GEMS.UIWPF.evmsService.IEvmsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EvmsServiceClient : System.ServiceModel.ClientBase<GEMS.UIWPF.evmsService.IEvmsService>, GEMS.UIWPF.evmsService.IEvmsService {
        
        public EvmsServiceClient() {
        }
        
        public EvmsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EvmsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EvmsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EvmsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddRole(GEMS.UIWPF.evmsService.User u, string RoleUserID, int EventID, string RolePost, string RoleDescription, int[] functionID) {
            return base.Channel.AddRole(u, RoleUserID, EventID, RolePost, RoleDescription, functionID);
        }
        
        public void DeleteRole(GEMS.UIWPF.evmsService.User u, int RoleID) {
            base.Channel.DeleteRole(u, RoleID);
        }
        
        public int AddGuest(GEMS.UIWPF.evmsService.User u, int EventID, string GuestName, string GuestContact, string GuestDescription) {
            return base.Channel.AddGuest(u, EventID, GuestName, GuestContact, GuestDescription);
        }
        
        public GEMS.UIWPF.evmsService.Guest[] ViewGuest(GEMS.UIWPF.evmsService.User u, int EventID) {
            return base.Channel.ViewGuest(u, EventID);
        }
        
        public void EditGuest(GEMS.UIWPF.evmsService.User u, int GuestID, string GuestName, string GuestDescription, string GuestContact) {
            base.Channel.EditGuest(u, GuestID, GuestName, GuestDescription, GuestContact);
        }
        
        public void DeleteGuest(GEMS.UIWPF.evmsService.User u, int GuestID) {
            base.Channel.DeleteGuest(u, GuestID);
        }
        
        public void removeFacility(GEMS.UIWPF.evmsService.User u, string venue, GEMS.UIWPF.evmsService.Faculty fac) {
            base.Channel.removeFacility(u, venue, fac);
        }
        
        public void updateFacility(GEMS.UIWPF.evmsService.User u, string venue, GEMS.UIWPF.evmsService.Faculty fac, string loc, string bookingCon, string techCon, int cap) {
            base.Channel.updateFacility(u, venue, fac, loc, bookingCon, techCon, cap);
        }
        
        public GEMS.UIWPF.evmsService.Faculty getFacilityAdmin(string userid) {
            return base.Channel.getFacilityAdmin(userid);
        }
        
        public string getFacilityAdminFaculty(GEMS.UIWPF.evmsService.Faculty userid) {
            return base.Channel.getFacilityAdminFaculty(userid);
        }
        
        public GEMS.UIWPF.evmsService.User[] getFacilityAdmins() {
            return base.Channel.getFacilityAdmins();
        }
        
        public GEMS.UIWPF.evmsService.Facility[] getVenuesByFaculty(GEMS.UIWPF.evmsService.Faculty f, int minCap, int maxCap) {
            return base.Channel.getVenuesByFaculty(f, minCap, maxCap);
        }
        
        public GEMS.UIWPF.evmsService.Facility[] getVenues(int minCap, int maxCap) {
            return base.Channel.getVenues(minCap, maxCap);
        }
        
        public GEMS.UIWPF.evmsService.Facility[] getVenuesByCap(GEMS.UIWPF.evmsService.Faculty fac, string faciID, int minCap, int maxCap) {
            return base.Channel.getVenuesByCap(fac, faciID, minCap, maxCap);
        }
        
        public GEMS.UIWPF.evmsService.User login(string userid, string password) {
            return base.Channel.login(userid, password);
        }
        
        public void assignLocationAdmin(GEMS.UIWPF.evmsService.User assigner, string userid, GEMS.UIWPF.evmsService.Faculty fac) {
            base.Channel.assignLocationAdmin(assigner, userid, fac);
        }
        
        public void assignEventOrganizer(GEMS.UIWPF.evmsService.User assigner, string userid, string description) {
            base.Channel.assignEventOrganizer(assigner, userid, description);
        }
        
        public void assignSystemAdmin(GEMS.UIWPF.evmsService.User assigner, string userid, string description) {
            base.Channel.assignSystemAdmin(assigner, userid, description);
        }
        
        public GEMS.UIWPF.evmsService.User[] searchUser(string name, string userid) {
            return base.Channel.searchUser(name, userid);
        }
        
        public GEMS.UIWPF.evmsService.User[] searchUserByRole(string name, string userid, GEMS.UIWPF.evmsService.EnumRoles r) {
            return base.Channel.searchUserByRole(name, userid, r);
        }
        
        public GEMS.UIWPF.evmsService.EnumRoles viewUserRole(string userid) {
            return base.Channel.viewUserRole(userid);
        }
        
        public void unAssignRole(GEMS.UIWPF.evmsService.User assigner, string userid) {
            base.Channel.unAssignRole(assigner, userid);
        }
        
        public string getNewMessage(string rid) {
            return base.Channel.getNewMessage(rid);
        }
        
        public int getUnreadMessageCount(string rid) {
            return base.Channel.getUnreadMessageCount(rid);
        }
        
        public GEMS.UIWPF.evmsService.Notifications[] getUnreadMessages(string rid) {
            return base.Channel.getUnreadMessages(rid);
        }
        
        public GEMS.UIWPF.evmsService.Notifications[] getAllMessages(string rid) {
            return base.Channel.getAllMessages(rid);
        }
        
        public void deleteNotifications(GEMS.UIWPF.evmsService.Notifications n) {
            base.Channel.deleteNotifications(n);
        }
        
        public void deleteAllNotificationsOfUser(string uid) {
            base.Channel.deleteAllNotificationsOfUser(uid);
        }
        
        public void setNotificationRead(GEMS.UIWPF.evmsService.Notifications n) {
            base.Channel.setNotificationRead(n);
        }
        
        public void sendNotification(string sender, string receiver, string title, string msg) {
            base.Channel.sendNotification(sender, receiver, title, msg);
        }
        
        public int CreateEvent(GEMS.UIWPF.evmsService.User u, string EventName, System.DateTime EventStartDateTime, System.DateTime EventEndDatetime, string EventDescription, string EventWebsite) {
            return base.Channel.CreateEvent(u, EventName, EventStartDateTime, EventEndDatetime, EventDescription, EventWebsite);
        }
        
        public GEMS.UIWPF.evmsService.Event[] ViewEvent(GEMS.UIWPF.evmsService.User u) {
            return base.Channel.ViewEvent(u);
        }
        
        public void EditEvent(GEMS.UIWPF.evmsService.User u, GEMS.UIWPF.evmsService.Event e, string EventOrganizerID, string EventName, System.DateTime EventStartDateTime, System.DateTime EventEndDatetime, string EventDescription, string EventWebsite) {
            base.Channel.EditEvent(u, e, EventOrganizerID, EventName, EventStartDateTime, EventEndDatetime, EventDescription, EventWebsite);
        }
        
        public void DeleteEvent(GEMS.UIWPF.evmsService.User u, GEMS.UIWPF.evmsService.Event e) {
            base.Channel.DeleteEvent(u, e);
        }
        
        public GEMS.UIWPF.evmsService.Event[] viewEventsbyDate(GEMS.UIWPF.evmsService.User u, System.DateTime start, System.DateTime end) {
            return base.Channel.viewEventsbyDate(u, start, end);
        }
        
        public int AddProgram(GEMS.UIWPF.evmsService.User u, string ProgramName, System.DateTime ProgramStartDateTime, System.DateTime ProgramEndDatetime, string ProgramDescription, int ProgramEventID) {
            return base.Channel.AddProgram(u, ProgramName, ProgramStartDateTime, ProgramEndDatetime, ProgramDescription, ProgramEventID);
        }
        
        public GEMS.UIWPF.evmsService.Program[] ViewProgram(GEMS.UIWPF.evmsService.User u, int EventID) {
            return base.Channel.ViewProgram(u, EventID);
        }
        
        public void EditProgram(GEMS.UIWPF.evmsService.User u, int ProgramID, string ProgramName, System.DateTime ProgramStartDateTime, System.DateTime ProgramEndDatetime, string ProgramDescription) {
            base.Channel.EditProgram(u, ProgramID, ProgramName, ProgramStartDateTime, ProgramEndDatetime, ProgramDescription);
        }
        
        public void DeleteProgram(GEMS.UIWPF.evmsService.User u, int ProgramID) {
            base.Channel.DeleteProgram(u, ProgramID);
        }
    }
}
