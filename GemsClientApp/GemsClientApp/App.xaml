<Application x:Class="GemsClientApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Gems.UIWPF.CustomCtrl"
             xmlns:evmService="clr-namespace:evmsService.entities"
             StartupUri="ADSS/frmLogin.xaml">
    <Application.Resources>

        <!--For Style apply on highlighting function using bool -->
        <Style x:Key="BudgetItemContStyle" TargetType="{x:Type ListViewItem}">
            <Style.Resources>
                <LinearGradientBrush x:Key="ProfitBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0.1" Color="LimeGreen" />
                </LinearGradientBrush>
                <local:BoolToPolarValueConverter x:Key="BoolPolarValueConv" />
            </Style.Resources>

            <!-- Stretch the content so that we can right-align values 
           in the Balance column. -->
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />

            <Style.Triggers>
                <!-- Color them green. -->
                <DataTrigger Binding="{Binding IsBought, Converter={StaticResource BoolPolarValueConv}}" Value="+1">
                    <Setter Property="Background" Value="{StaticResource ProfitBrush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--For Style apply on highlighting function using Date -->
        <Style x:Key="TaskItemContStyle" TargetType="{x:Type ListBoxItem}">
            <Style.Resources>
                <LinearGradientBrush x:Key="NewBrush" EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFF77575" Offset="1"/>
                    <GradientStop Color="#FFB86D6D"/>
                </LinearGradientBrush>
                <local:DateToPolarValueConverter x:Key="DatePolarValueConv" />
            </Style.Resources>

            <!-- Stretch the content so that we can right-align values 
           in the Balance column. -->
            <!--Setter Property="HorizontalContentAlignment" Value="Stretch" /-->

            <Style.Triggers>
                <!-- Color them red. -->
                <DataTrigger Binding="{Binding DueDate, Converter={StaticResource DatePolarValueConv}}" Value="-1">
                    <Setter Property="Background" Value="{StaticResource NewBrush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--For Style apply on highlighting function using balance -->
        <Style x:Key="ItemContStyle" TargetType="{x:Type ListViewItem}">
            <Style.Resources>
                <LinearGradientBrush x:Key="ProfitBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0.1" Color="#AA00CC00" />
                    <GradientStop Offset="0.8" Color="#55008800" />
                </LinearGradientBrush>
                <LinearGradientBrush x:Key="LossBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0.1" Color="#AACC0000" />
                    <GradientStop Offset="0.8" Color="#55880000" />
                </LinearGradientBrush>

                <local:NumberToPolarValueConverter x:Key="PolarValueConv" />
            </Style.Resources>

            <!-- Stretch the content so that we can right-align values 
           in the Balance column. -->
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />

            <Style.Triggers>
                <!-- Color them green. -->
                <DataTrigger Binding="{Binding Balance, Converter={StaticResource PolarValueConv}}" Value="+1">
                    <Setter Property="Background" Value="{StaticResource ProfitBrush}" />
                </DataTrigger>
                <!-- Color them red. -->
                <DataTrigger Binding="{Binding Balance, Converter={StaticResource PolarValueConv}}" Value="-1">
                    <Setter Property="Background" Value="{StaticResource LossBrush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--For Style apply on drag and drop-->
        <DataTemplate x:Key="DDlistBoxDataTemplate" DataType="{x:Type evmService:Task}">
            <StackPanel Orientation="Vertical" Margin="5,5,5,5">
                <TextBlock Text="{Binding Path=TaskName}" FontWeight="Bold"/>
                <WrapPanel>
                    <TextBlock Width="250" TextWrapping="Wrap" Text="{Binding Path=TaskDesc, StringFormat=\{0\}}" />
                </WrapPanel>
            </StackPanel>
        </DataTemplate>

        <Style x:Key="DDItemContStyle" TargetType="{x:Type ListBoxItem}">
            <Style.Resources>
                <LinearGradientBrush x:Key="ProfitBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0.1" Color="#AA00CC00" />
                    <GradientStop Offset="0.8" Color="#55008800" />
                </LinearGradientBrush>
                <LinearGradientBrush x:Key="LossBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0.1" Color="#AACC0000" />
                    <GradientStop Offset="0.8" Color="#55880000" />
                </LinearGradientBrush>
                <!-- Reduces a customer's Balance to either -1, 0, or +1 -->
                <local:NumberToPolarValueConverter x:Key="PolarValueConv" />
            </Style.Resources>

            <!-- Stretch the content so that we can right-align values 
          in the Balance column. -->

            <Style.Triggers>
                <!-- Color them green. -->
                <DataTrigger Binding="{Binding Balance, Converter={StaticResource PolarValueConv}}" Value="+1">
                    <Setter Property="Background" Value="{StaticResource ProfitBrush}" />
                </DataTrigger>
                <!-- Color them red. -->
                <DataTrigger Binding="{Binding Balance, Converter={StaticResource PolarValueConv}}" Value="-1">
                    <Setter Property="Background" Value="{StaticResource LossBrush}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--End of drag drop Style-->
    </Application.Resources>
</Application>
